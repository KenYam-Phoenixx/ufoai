// ==================
// My Test Alt Hud
// ==================

// New font
font f_veryverysmall
{
	font	"_media/DejaVuSans.ttf"
	size	8
}

component panel cmpSoldierPanel {
	{
		image		"hhud/tm_sldbg"
		size		"36 46"
		onClick		{ cmd "actor_select <node:this@num>;" }
	}
	model head
	{
		angles		"15 60 100"
		autoscale	true
		pos			"0 0"
		size		"36 36"
		ghost true
	}

	bar tu_status
	{
		pos			"12 39"
		size		"22 3"
		color		".371 .7734 .832 1"
		disabled	true
	}
	bar h_status
	{
		pos			"12 43"
		size		"22 3"
		color		".2187 .73 .23 1"
		disabled	true
	}
}

window hhud extends hud
{
	{
		noticepos	"512 20"
		timeout	10000
		starlayout	true
		fill		true
	}

	func showinventory
	{
		cmd "ui_push ahudinv;"
	}

	// ==================
	// render rectangle
	// ==================
	battlescape render
	{
		pos			"0 0"
		size		"1024 768"
		align		LAYOUTALIGN_FILL
	}

	// ==================
	// Bottom panel
	// ==================
	panel bottom {
		{
			pos			"0 640"
			size		"1024 128"
//			align		LAYOUTALIGN_BOTTOM
//			image "hhud/panel_bg"
		}
		// todo: why setting panel image does not work?
	image background {
		src "hhud/panel_bg"
		pos "0 0"
		size "1024 128"
	}
		panel rweapon {
			{
				pos			"15 13"
				size		"233 106"
				onClick		{ cmd "hud_fireweapon r 0;" }
			}

			model rweapon
			{
				src			*cvar:mn_rweapon
				angles		"-15 170 90"
				autoscale	true
				pos			"2 15"
				size 		"140 71"
				excluderect	{ 	pos	"0 0"	size	"140 71" }
			}

			string rweapon_fmode_name
			{
				string 		*cvar:fm_selected
				pos			"5 80"
				size		"222 19"
				color		".7 .7 .52 1"
				longlines	LONGLINES_CHOP
				excluderect	{ 	pos	"0 0"	size	"222 19" }
			}

			string rweapon_ammo_count
			{
				string		*cvar:mn_ammoright
				pos			"176 39"
				size		"68 35"
				color		".7 .7 .52 1"
				font		"f_normal"
				align		ALIGN_CC
				excluderect	{ 	pos	"0 0"	size	"68 35" }
			}
		}

		/* Right hand weapon (on left side) */
		image fm_btn_r {
			src				"hhud/fm_btn_r"
			pos				"246 19"
			size			"50 42"
			onMouseEnter {
				if (*node:this@src == "hhud/fm_btn_r") {
				*node:this@src	= "hhud/fm_btn_r_on"
				}
			}
			onMouseLeave {
				if (*node:this@src == "hhud/fm_btn_r_on") {
				*node:this@src	= "hhud/r_fm_btn"
				}
			}

			onClick			{
				cmd "ui_push_dropdown firemode_right.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.right.bt_pfire LAYOUTALIGN_TOPLEFT;"
				*node:this@src	= "hhud/r_fm_btn"
				}

//			onClick			{ cmd "ui_push_dropdown firemode_right.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.right.bt_pfire LAYOUTALIGN_TOPLEFT;toggle_fm_btn 0;" }
		}
		image fm_btn_r_on {
			src				"hhud/fm_btn_r_on"
			pos				"246 19"
			size			"50 42"
			invis			true
			onClick			{ cmd "ui_push_dropdown firemode_right.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.right.bt_pfire LAYOUTALIGN_TOPLEFT;toggle_fm_btn_r_off" }
		}

		image reload_btn_r {
			src				"hhud/reload_btn_r"
			pos				"245 65"
			size			"50 42"
			invis			false
			onClick			{ cmd "hud_reloadright;" }
		}

		/* Left hand weapon (on right side) */
		image fm_btn_l {
			src				"hhud/fm_btn_l"
			pos				"730 19"
			size			"50 42"
			invis			false
			onClick			{ cmd "ui_push_dropdown firemode_left.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.left.bt_pfire LAYOUTALIGN_TOPRIGHT;toggle_fm_btn_l_on;" }
		}
		image fm_btn_l_on {
			src				"hhud/fm_btn_l_on"
			pos				"730 19"
			size			"64 64"
			invis			true
			onClick			{ cmd "ui_push_dropdown firemode_left.anchor LAYOUTALIGN_BOTTOMLEFT hud_default.left.bt_pfire LAYOUTALIGN_TOPRIGHT;toggle_fm_btn_l_off;" }
		}
		image reload_btn_l {
			src				"hhud/reload_btn_l"
			pos				"730 65"
			size			"64 64"
			invis			false
			onClick			{ cmd "hud_reloadleft;" }
		}

		/* Fire and crouch reservation */
		radiobutton res_none
		{
			image		"hhud/res_none"
			pos			"306 63"
			size		"31 23"
			value		0
			cvar		*cvar:rf_reserve
			onClick		{	cmd "deselect_reaction; toggle_res_none_on;" }
		}
		radiobutton res_single
		{
			image		"hhud/res_single"
			pos			"337 63"
			size		"25 23"
			value		1
			cvar		*cvar:rf_reserve
			onClick		{	cmd "startreactiononce;toggle_res_single_on;" }
		}
		radiobutton res_multi
		{
			image	"hhud/res_multi"
			pos			"362 63"
			size		"31 23"
			value		2
			cvar		*cvar:rf_reserve
			onClick		{	cmd "startreactionmany;toggle_res_multi_on;" }
		}
		checkbox bt_crouch_reservation
		{
			tooltip		*cvar:mn_crouch_reservation_tt
			image		"hhud/res_crouch"
			pos			"360 91"
			size		"32 22"
			current		0
			onChange	{ cmd "hud_togglecrouchreserve;toggle_res_crouch;" }
		}

		/* Puts a soft light glow behind the soldier model */
		image glow_soldier
		{
			src				"hhud/glow_soldier"
			pos				"470 15"
			size			"128 128"
			excluderect		{ pos	"0 0"	size	"128 128" }
		}

		/* The soldier's name */
		string str_name
		{
			string			*cvar:mn_name
			pos				"310 22"
			size			"190 18"
			color			".7 .7 .52 1"
			longlines		LONGLINES_CHOP
		}

		/* The soldier model */
		model right_actor
		{
			{
				src			*cvar:mn_body
				skin		*cvar:mn_skin
				anim		*cvar:mn_anim
				angles		"0 80 90"
				pos			"457 -10"
				size		"105 128"
				scale		"2 2 2"
			}

			model right_head
			{
				src			*cvar:mn_head
				skin		*cvar:mn_skin
				tag			"tag_head"
			}

			model right_rweapon
			{
				src			*cvar:mn_rweapon
				tag			"tag_rweapon"
			}

			model right_lweapon
			{
				src			*cvar:mn_lweapon
				tag			"tag_lweapon"
			}
		}

		/* Small RESERVED text */
		string reserved_title
		{
			string 			"_RESERVED"
			pos				"404 55"
			size			"80 10"
			color			"0 0 0 1"
			bgcolor			".7 .7 .52 .5"
			font			"f_veryverysmall"
			textalign		ALIGN_CC
		}

		/* Arrow left of the firemode reservation */
		image reserved_fnotice_arrow
		{
			src				"hhud/arrow_r"
			pos				"405 71"
			size			"8 8"
		}

		/* Firemode reservation text to be displayed */
		string reserved_fnotice
		{
			string 			""
			pos				"408 68"
			size			"120 12"
			color			".7 .7 .52 1"
			font			"f_verysmall"
			textalign		ALIGN_CL
		}

		/* Arrow left of the crouch reservation */
		image reserved_cnotice_arrow
		{
			src				"hhud/arrow_r"
			pos				"405 99"
			size			"8 8"
		}

		/* Crouch reservation text to be displayed */
		string reserved_cnotice
		{
			string 			""
			pos				"408 96"
			size			"120 12"
			color			".7 .7 .52 1"
			font			"f_verysmall"
			textalign		ALIGN_CL
		}

		/* Health bar */
		image health_border
		{
			src			"hhud/status_border"
			pos			"550 71"
			size		"256 16"
		}
		bar health
		{
			pos			"551 72"
			size		"164 7"
			color		".1875 .65625 .164 1"
			border		1
			bordercolor	".7 .7 .52 1"
			current		*cvar:mn_hp
			tooltip *cvar:mn_hp
			max			*cvar:mn_hpmax
			disabled	true
		}

		/* Time units bar */
/*		image tu_border
		{
			src			"hhud/status_border"
			pos			"550 87"
			size		"256 16"
		}*/
		bar tu
		{
			pos			"551 88"
			size		"164 9"
			color		".371 .7734 .832 1"
			border		1
			padding		1
//			bordercolor	".7 .7 .52 1"
			bordercolor	"1 0 0 1"
			current		*cvar:mn_tu
			tooltip		*cvar:mn_tu
			max			*cvar:mn_tumax
			disabled	true
		}

		/* Morale bar */
		bar morale
		{
			pos			"551 104"
			size		"164 7"
			color		".65625 .65625 .164 1"
			border		1
			bordercolor	".7 .7 .52 1"
			current		*cvar:mn_morale
			tooltip		*cvar:mn_morale
			max			*cvar:mn_moralemax
			disabled	true
		}
		image morale_border
		{
			src			"hhud/status_border"
			pos			"550 103"
			size		"256 16"
			excluderect	{ pos "0 0"	size "256 16" }
		}

		/* Left weapon panel */
		panel lweapon {
			{
				pos			"785 13"
				size		"233 106"
				onClick		{ cmd "hud_fireweapon l 0;" }
			}

			model lweapon
			{
				src				*cvar:mn_lweapon
				angles			"-15 170 90"
				autoscale		true
				pos				"2 15"
				size 			"140 71"
				excluderect		{ 	pos	"0 0"	size	"140 71" }
			}

			string lweapon_fmode_name
			{
				string 			*cvar:fm_selected
				pos				"5 80"
				size			"222 19"
				color			".7 .7 .52 1"
				longlines		LONGLINES_CHOP
				excluderect		{ 	pos	"0 0"	size	"222 19" }
			}

			string lweapon_ammo_count
			{
				string		*cvar:mn_ammoleft
				pos			"153 26"
				size		"68 35"
				color		".7 .7 .52 1"
				font		"f_normal"
				align		ALIGN_CC
				excluderect	{ 	pos	"0 0"	size	"68 35" }
			}
		}

		/* This puts a blue overlay with lines over all display on the screens */
/*		image bottom_panel_overlay
		{
			src			"hhud/panel_bg_overlay"
			pos			"0 0"
			size		"1024 128"
			excluderect	{ pos	"0 0"	size	"1024 128" }
		}
	*/
		/* Crouch and stand buttons */
		custombutton crouch
		{
			background "hhud/btnset_lft"
			icon "hhud/crouch_icon"
			pos "556 12"
			align ALIGN_CC
			size "44 44"
			onClick		{ cmd "toggle_btn_crouch;" }
		}


		custombutton stand
		{
			background "hhud/btnset_rgt"
			icon "hhud/stand_icon"
			pos "597 12"
			align ALIGN_CC
			size "44 44"
			onClick		{ cmd "toggle_btn_stand;" }
		}

		/* Inventory and stats buttons */
		custombutton inv
		{
			background "hhud/btnset_lft"
			icon "hhud/inv_icon"
			pos "643 12"
			align ALIGN_CC
			size "44 44"
			onclick {cmd "toggle_btn_inv;" }
		}
		custombutton stats
		{
			background "hhud/btnset_rgt"
			icon "hhud/stats_icon"
			pos "684 12"
			align ALIGN_CC
			size "44 44"
			onclick {cmd "toggle_btn_stats;" }
		}
	}
/*
	confunc toggle_fm_btn {
		// <1> is r

		*node:root.bottom.fm_btn_r@invis = true
		*node:root.bottom.fm_btn_r_on@invis = false
	}
	confunc toggle_fm_btn_r_on {
		*node:root.bottom.fm_btn_r@invis = true
		*node:root.bottom.fm_btn_r_on@invis = false
	}

	confunc toggle_fm_btn_r_off {
		*node:root.bottom.fm_btn_r@invis = false
		*node:root.bottom.fm_btn_r_on@invis = true
	}
	confunc toggle_reload_btn_r_on {
		*node:root.bottom.reload_btn_r@invis = true
		*node:root.bottom.reload_btn_r_on@invis = false
	}

	confunc toggle_reload_btn_r_off {
		*node:root.bottom.reload_btn_r@invis = false
		*node:root.bottom.reload_btn_r_on@invis = true
	}
*/
	confunc toggle_btn_crouch {
		if (*node:root.bottom.crouch@background == "hhud/btnset_lft") {
			cmd "actor_standcrouch;"
			}
	}

	confunc toggle_btn_inv {
//		*cvar:inv_opened
		if ( *cvar:inv_opened != true) {
			*node:root.bottom.inv@background = "hhud/btnset_lft_on"
			*node:root.bottom.inv@icon = "hhud/inv_icon_on"
			cmd "ui_push hudinv;"
			*cvar:inv_opened = true
		} else {
			cmd "ui_pop;"
			*node:root.bottom.inv@background = "hhud/btnset_lft"
			*node:root.bottom.inv@icon = "hhud/inv_icon"
			*cvar:inv_opened = false
		}
	}
	confunc toggle_btn_stats {

		if (*node:root.bottom.stats@background == "hhud/btnset_rgt") {
			*node:root.bottom.stats@background = "hhud/btnset_rgt_on"
			cmd "ui_push hudphysdat;"
			*node:root.bottom.stats@icon = "hhud/stats_icon_on"
		}
		else {
			cmd "ui_pop;"
			*node:root.bottom.stats@background = "hhud/btnset_rgt"
			*node:root.bottom.stats@icon = "hhud/stats_icon"
		}
	}

	confunc toggle_res_none_on {
		*node:root.bottom.reserved_fnotice@string = "_No reaction fire"
	}

	confunc toggle_res_single_on {
		*node:root.bottom.reserved_fnotice@string = "_Single shot"
	}

	confunc toggle_res_multi_on {
		*node:root.bottom.reserved_fnotice@string = "_Multiple shots"
	}

	confunc crouch_checkbox_disable {
		*node:root.bottom.bt_crouch_reservation@disabled = true
	}
	confunc crouch_checkbox_clear	{
		*node:root.bottom.bt_crouch_reservation@disabled = false
		*node:root.bottom.bt_crouch_reservation@current = 0
		*node:root.bottom.reserved_cnotice@string = ""
	}
	confunc crouch_checkbox_check	{
		*node:root.bottom.bt_crouch_reservation@disabled = false
		*node:root.bottom.bt_crouch_reservation@current = 1
		*node:root.bottom.reserved_cnotice@string = "_Crouch reserved"
	}
	confunc deselect_stand {
		*node:root.bottom.crouch@background = "hhud/btnset_lft"
		*node:root.bottom.crouch@icon = "hhud/crouch_icon"
		*node:root.bottom.stand@background = "hhud/btnset_rgt_on"
		*node:root.bottom.stand@icon = "hhud/stand_icon_on"
		}
	confunc deselect_crouch {
		*node:root.bottom.crouch@background = "hhud/btnset_lft_on"
		*node:root.bottom.crouch@icon = "hhud/crouch_icon_on"
		*node:root.bottom.stand@background = "hhud/btnset_rgt"
		*node:root.bottom.stand@icon = "hhud/stand_icon"
		}
//	confunc disable_stand { *node:root.left.bt_duck@texl = "52 75" *node:root.left.bt_duck@texh = "104 112" *node:root.left.bt_duck@image = "hud/buttons2g" }
//	confunc disable_crouch { *node:root.left.bt_duck@texl = "0 75" *node:root.left.bt_duck@texh = "52 112" *node:root.left.bt_duck@image = "hud/buttons2g" }

	confunc hudselect {
		*cvar:selected_soldier = <1>
		*cvar:i = 0;
		while ( *cvar:i < 8 ) {
			*node:root.team.sld<cvar:i>@image = "hhud/tm_sldbg"
			*cvar:i = ( *cvar:i + 1 )
		}
		delete *cvar:i
			*node:root.team.sld<1>@image = "hhud/tm_sldbg_sel"
	}

	/*
	confunc hudselect {
		*cvar:selected_soldier = <1>
		*node:root.team.team_sld_sel@left = ( *node:root.team.team_sld<1>@left - 0 )
	}
	*/
/*
	// Select tu button
	image showtu_btn {
		align		LAYOUTALIGN_MIDDLE
		src		"hhud/tm_sldbg_sel"
		pos		"27 10"
		size		"64 64"
		onClick		{ cmd "showtu;" }
	}
	confunc showtu {
		*node:root.team.team_sld0_status@color = ".65 .23 .23 1"
		*node:root.team.team_sld0_status@current = "*cvar:mn_tu0"
		*node:root.team.team_sld0_status@max = "*cvar:mn_tumax0"
	}
	*/
	panel team {
		{
			pos		"0 8"
			size	"770 58"
			align	LAYOUTALIGN_TOP
			image "hhud/tm_panel"
		}

		cmpSoldierPanel sld0
		{
		pos "27 5"
		}
		cmpSoldierPanel sld1
		{
		pos "72 5"
		}
		cmpSoldierPanel sld2
		{
		pos "117 5"
		}
		cmpSoldierPanel sld3
		{
		pos "162 5"
		}
		cmpSoldierPanel sld4
		{
		pos "207 5"
		}

		cmpSoldierPanel sld5
		{
		pos "252 5"
		}

		cmpSoldierPanel sld6
		{
		pos "297 5"
		}

		cmpSoldierPanel sld7
		{
		pos "342 5"
		}
	}

	// ==================
	// init function
	// ==================

	func onWindowOpened
	{
		cmd "debug_ui 1;"
		// missed currently
//		*node:root.chatscreen@invis = true
		cmd "music_change battlescape;"
//		call *node:root.right.show_rightweapon
		*cvar:mn_showchatbuttons = 0
		*cvar:rf_reserve = 0
		*cvar:inv_opened = false
		*cvar:i = 0;
		while ( *cvar:i < 8 ) {
			*node:root.team.sld<cvar:i>@num = <cvar:i>
			*node:root.team.sld<cvar:i>.head@src = *cvar:mn_head<cvar:i>
			*node:root.team.sld<cvar:i>.h_status@max = *cvar:mn_hpmax<cvar:i>
			*node:root.team.sld<cvar:i>.h_status@current = *cvar:mn_hp<cvar:i>
			*node:root.team.sld<cvar:i>.tu_status@max = *cvar:mn_tumax<cvar:i>
			*node:root.team.sld<cvar:i>.tu_status@current = *cvar:mn_tu<cvar:i>
			*cvar:i = ( *cvar:i + 1 )
		}
		delete *cvar:i

		cmd "hudselect 0;"
	}

	func onScriptLoaded {
		// Register the window to the HUD list
		cmd "add_hud_name <path:root> \"_Custom HUD (by H-Hour)\""
	}
}
