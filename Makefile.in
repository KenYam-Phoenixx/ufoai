#######################################################################################################
# Configure guessed variables ...
#######################################################################################################

CC=@CC@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
# MKDIR_P=@MKDIR_P@
WINDRES=@WINDRES@
LIBS=@LIBS@
LDFLAGS=@LDFLAGS@

TARGET_OS=@TARGET_OS@
TARGET_CPU=@TARGET_CPU@
EXE_EXT=@EXEEXT@

SDL_CFLAGS=@SDL_CFLAGS@
SDL_LIBS=@SDL_LIBS@

CLIENT_LIBS=@CLIENT_LIBS@
SERVER_LIBS=@SERVER_LIBS@
GAME_LIBS=@GAME_LIBS@
TOOLS_LIBS=@TOOLS_LIBS@

MMX=@MMX@

PROFILING=@PROFILING@
PARANOID=@PARANOID@
BUILD_CLIENT=@BUILD_CLIENT@
BUILD_DEDICATED=@BUILD_DEDICATED@
BUILD_UFO2MAP=@BUILD_UFO2MAP@
BUILD_DEBUG=@BUILD_DEBUG@

HAVE_SHADERS=@HAVE_SHADERS@

# assign parameters from configure
prefix=@prefix@
exec_prefix=@exec_prefix@
BINDIR=@bindir@
datarootdir=@datarootdir@
DATADIR=@datadir@/ufoai
INSTALL=./install-sh

VERSION=$(shell grep UFO_VERSION src/common/common.h | sed -e 's/.*UFO_VERSION \"\(.*\)\"/\1/')

#######################################################################################################

.PHONY: all all2 clean echo_info

include build/platform_specific.mk
include build/defs.mk

#######################################################################################################

# define all the modules that need to be compiled
MODULES = client server tools game sound masterserver

all: all2

# include the make files for each module
-include $(patsubst %, build/%.mk, $(MODULES))

ALL_DEPS = $(patsubst %.o, %.d, $(ALL_OBJS))

all2: Makefile $(TARGETS) echo_info

# check that the makefile is up to date
Makefile: Makefile.in
	@echo "ERROR: You need to re-run configure"
	@exit 1

# Say how to build the build directories
$(BUILDDIR)/.dirs:
	@mkdir -p $(foreach i, $(ALL_OBJS), $(dir $i))
	@touch $@

clean:
	@echo "Making clean"
	@rm -f $(ALL_OBJS) $(ALL_DEPS) $(BUILDDIR)/.dirs $(TARGETS)

echo_info:
	@echo "CFLAGS"
	@echo "-----------------------"
	@echo $(CFLAGS)
	@echo $(CLIENT_CFLAGS) $(SDL_CFLAGS)
	@echo
	@echo "LDFLAGS"
	@echo "-----------------------"
	@echo $(LDFLAGS)
	@echo $(CLIENT_LIBS) $(SDL_LIBS)
	@echo
	@echo "Gettext"
	@echo "-----------------------"
	@echo "Type '$(MAKE) lang' to compile the gettext translation files."
	@echo
	@echo "Maps"
	@echo "-----------------------"
	@echo "Type '$(MAKE) maps' to compile the maps"
	@echo
	@echo "Built for $(BUILDDIR)"
	@echo

include build/lang.mk
include build/install.mk
include build/various.mk

maps: $(UFO2MAP_TARGET)
	@$(MAKE) -C base/maps all

#
# Target to install the whole game - executables and game data.
#
# Use configure's parameters --bindir= and --datadir= to specify destination
# directories, "bindir" for run scripts and "datadir" for the whole game.
# "ufoai/" will be appended to the end of datadir path.
#
install_complete: install_data install_exec

#
# Target to install only the executables, language files and the run script.
# Other game data has to be installed from the ufoai-VERSION-data.tar archive.
#
# For destination directories see install_complete above.
#
install: install_exec
	@echo
	@echo Please unpack file ufoai-$(VERSION)-data.tar into $(DATADIR)
	@echo
	@echo

#
# Target to install only the game data.
#
install_data:
	@$(MAKE) maps
# Create all pk3 files
	@cd base && ./archives.sh
	$(INSTALL) -d $(DATADIR)/base
# Copy them to datadir
	$(INSTALL) -m 644 base/*.pk3 $(DATADIR)/base

#
# Target to install the game executables and language files. It also creates a
# shell script to run the game and dedicated server from directory other than
# datadir.
#
install_exec: $(TARGETS)
	@$(MAKE) lang
	$(INSTALL) -d $(DATADIR)/base
# Copy each compiled file to datadir (with path)
	for file in $(TARGETS); do $(INSTALL) -m 755 $$file $(DATADIR)/$$file; done
# Copy all language files
	for dir in base/i18n/*; do $(INSTALL) -m 644 $$dir/LC_MESSAGES/ufoai.mo $(DATADIR)/$$dir/LC_MESSAGES/ufoai.mo; done
# Create and install run scripts
	@echo "#!/bin/sh" > ufo.sh
	@echo "cd $(DATADIR); ./ufo \$$*; exit \$$?" >> ufo.sh
	$(INSTALL) -m 755 ufo.sh $(BINDIR)/ufo
	@echo "#!/bin/sh" > ufoded.sh
	@echo "cd $(DATADIR); ./ufoded \$$*; exit \$$?" >> ufoded.sh
	$(INSTALL) -m 755 ufoded.sh $(BINDIR)/ufoded

#######################################################################

-include $(ALL_DEPS)
